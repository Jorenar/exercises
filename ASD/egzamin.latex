\documentclass[12pt]{article}

\usepackage[a4paper, vmargin=10pt, hmargin=50pt, head=16pt, includehead]{geometry}
\usepackage{fancyhdr}
\usepackage{titlesec}

\titleformat{\section}{\normalfont\Large\bfseries}{}{0pt}{} % remove section numbering
\setlength{\parindent}{0em}

\pagestyle{fancy}

\renewcommand{\sectionmark}[1]{ \markright{#1}{} }

\lhead{ASD - egzamin}
\chead{Jakub Łukasiewicz}
\rhead{\rightmark}

\begin{document}
\section{Zadanie 5}

Rozwiązanie zapisane w języku C++11. Przyjmujemy zmianę notacji
z \texttt{foo(i,q)} na \texttt{q.foo(i)}

\begin{verbatim}
#include <stack>

template<std::size_t N>
class Foo {

    struct Node {
        std::size_t val;
        Node* prev;
        Node* next;
        Node(std::size_t i, Node* n) : val{i}, prev{}, next{n} {}
    };

    Node* root;
    std::stack<Node*> helper[N];
    std::size_t count[N];

public:
    Foo() : root{} {}

    void push(std::size_t i)
    {
        Node* temp = new Node(i, root);
        if (root != nullptr) {
            root->prev = temp;
        }
        root = temp;
        helper[i].push(temp);
        count[i] += 1;
    }

    void pop()
    {
        if (root == nullptr) {
            return;
        }

        std::size_t i = root->val;
        delete helper[i].pop();
        count[i] -= 1;
        if (root->next) {
            root->next->prev = nullptr;
        }
        root = root->next;
    }

    bool search(std::size_t i)
    {
        return count[i];
    }

    void delete(std::size_t i)
    {
        if (helper[i].top() == root) {
            pop();
        }
        else if (count[i]) {
            Node* temp = helper[i].pop();
            if (temp->prev) {
                temp->prev->next = temp->next;
            }
            if (temp->next) {
                temp->next->prev = temp->prev;
            }
            delete temp;
            count[i] -= 1;
        }
    }

    std::size_t cnt(std:size_t i)
    {
        return count[i];
    }

};
\end{verbatim}

\end{document}
